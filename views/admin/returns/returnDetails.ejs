<%- include('../adminHead.ejs') %>

  <div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h1>Order Details</h1>
      <div>
        <%# if( order.status=="Processing" || order.status=="Pending" ) {%>
          <% const isDelivered=order.status==="Delivered" ; const isRejected=order.status==="Rejected" ; const
            isCancelled=order.status==="Cancelled" ; const isPlaced=order.status==="Placed" ; const
            canManageOrder=!isDelivered; const canRejectOrHold=!isRejected && !isCancelled; const
            canAcceptOrder=!isPlaced && !isRejected; const canDeliverOrShip=!isCancelled && !isRejected; %>

            <% if (canManageOrder) { %>
              <% if (canRejectOrHold) { %>
                <button onclick="changeOrder('<%= order._id %>', 'Rejected')" class="btn btn-danger me-2">
                  Reject Order
                </button>
                <button onclick="changeOrder('<%= order._id %>', 'Pending')" class="btn btn-warning me-2">
                  Hold Order
                </button>
                <% if (canAcceptOrder) { %>
                  <button onclick="changeOrder('<%= order._id %>', 'Placed')" class="btn btn-success me-2">
                    Accept Order
                  </button>
                  <% } %>
                    <% } %>

                      <% if (canDeliverOrShip) { %>
                        <button onclick="changeOrder('<%= order._id %>', 'Delivered')" class="btn btn-success me-2">
                          Delivered
                        </button>
                        <button onclick="changeOrder('<%= order._id %>', 'Shipped')" class="btn btn-info me-2">
                          Shipped
                        </button>
                        <% } %>
                          <% } else { %>
                            <!-- Optionally add alternative actions for orders that are Delivered -->
                            <!-- For example, a Return button: -->
                            <!-- <button onclick="changeOrder('<%#= order._id %>', 'Return')" class="btn btn-info me-2">Return</button> -->
                            <% } %>
                              <!-- <button onclick="exportOrder(`<%#= order._id%>`)" class="btn btn-outline-secondary">Export</button> -->
                              <!-- <button class="btn btn-outline-secondary">Print</button> -->
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-body">

            <h5 class="card-title">Order : <%= order.orderId %>
            </h5>
            <p class="card-text">Status : <%= order.status %>
            </p>
            <% let date=new Date(order.createdAt) %>
              <p class="card-text">Added: <%= `${date.getDate()}/ ${date.toLocaleString('default', { month: 'short' })}
                  / ${date.getFullYear() }` %>
              </p>
              <p class="card-text">Payment Method: <%= order.paymentMethod %>
              </p>
              <p class="card-text">Payment Status: <%= order.paymentStatus %>
              </p>
              <!-- <p class="card-text">Shipping Method: Flat Shipping</p> -->
          </div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-body">
            <h5 class="card-title">Customer</h5>
            <p class="card-text">
              <%= order?.userId?.username %>
            </p>
            <p class="card-text">
              <%= order?.userId?.email %>
            </p>
            <p class="card-text">
              <%= order?.userId?.phone %>
            </p>

          </div>
        </div>
        <!-- <div class="card mb-4">
          <div class="card-body">
            <h5 class="card-title">Document</h5>
            <p class="card-text">Invoice: INV-32011</p>
            <p class="card-text">Shipping: SHP-2011REQ</p>
            <p class="card-text">Rewards: 480 point</p>
          </div>
        </div> -->
      </div>
    </div>
    <p>
      <%#= order %>
    </p>

    <div class="card mb-4">
      <div class="card-body">
        <h5 class="card-title">Order List (+<%= order.products.length %> Orders)</h5>
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
              </tr>
            </thead>
            <tbody>
              <% let total=0; %>
                <% order.products.forEach(product=> { %>
                  <tr>
                    <td>
                      <%= product.productId.name %>
                    </td>
                    <td>
                      <%= product.quantity %>
                    </td>
                    <td>₹ <%= product.price %>
                    </td>
                    <td>₹ <%= product.price * product.quantity %>
                    </td>
                    <% total +=product.price * product.quantity %>
                  </tr>
                  <% }) %>
                    <!-- <tr>
                <td>Smartwatch E2</td>
                <td>302011</td>
                <td>$590.00</td>
                <td>$590.00</td>
              </tr> -->
            </tbody>
          </table>
        </div>
        <p>Subtotal: ₹ <%= total %>
        </p>
        <p>Discount:₹ <%= order.discount %>
        </p>

        <p>Shipping Rate: <%= order.shippingFee || 0 %>
        </p>
        <p>Total:₹ <%= order.totalPrice %>
        </p>
      </div>
    </div>
    <!-- <button class="btn btn-outline-secondary mb-3">Print Address</button> -->
    <div class="card mb-4">
      <div class="card-body">
        <h5 class="card-title">Billing Address</h5>


        <div class="mb-3">

          <% for (const element in order.billingAddress) {%>
            <%=element %> : <%= order.billingAddress[element] %>,<br>
                <% } %>

        </div>


      </div>
    </div>

    <div class="card mb-4">
      <div class="card-body">
        <h5 class="card-title">Shipping Address</h5>

        <% for (const element in order.shippingAddress) {%>
          <%=element %> : <%= order.shippingAddress[element] %> ,<br>
              <% } %>

      </div>
    </div>
    <!-- address end -->
  </div>


  <%- include('../adminFoot.ejs') %>

    <script>
      // reject order 
      function changeOrder(orderId, status) {

        Swal.fire({
          title: 'Are you sure?',
          text: `You want to ${status} this order ?`,
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: `Yes, ${status} it!`
        }).then((data) => {
          if (data.isConfirmed) {

            fetch('/admin/orders/changeStatus/' + orderId, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ status: status }),

            })
              .then((response) => response.json())
              .then((data) => {
                console.log(data);
                if (data.success) {

                  Swal.fire({
                    title: 'Order Rejected!',
                    text: 'Your order has been rejected.',
                    icon: 'success',
                  })
                  window.location.href = "/admin/orders";
                } else {
                  Swal.fire({
                    title: 'Failed to reject order!',
                    text: data.message,
                    icon: 'error',
                  })
                }
              });
          }
        })
      }

      // // hold order 
      // function holdOrder(orderId) {
      //   Swal.fire({
      //     title: 'Are you sure?',
      //     text: "You want to HOLD this order ?",
      //     icon: 'warning',
      //     showCancelButton: true,
      //     confirmButtonColor: '#3085d6',
      //     cancelButtonColor: '#d33',
      //     confirmButtonText: 'Yes, reject it!'
      //   }).then((data)=> {  
      //     if(data.isConfirmed){
      //     fetch('/admin/orders/accept/' + orderId, {
      //       method: 'PUT',
      //     })
      //      .then((response) => response.json())
      //      .then((data) => {
      //         if (data.success) {
      //           alert("Order accepted successfully!");
      //           window.location.href = "/admin/orders";
      //         } else {
      //           alert("Failed to accept order!");
      //         }
      //       });
      //   }})
      // }

      function exportOrder(orderId) {
        fetch('/admin/orders/export/' + orderId, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        })
          .then((response) => response.blob())
          .then((data) => {
            const url = window.URL.createObjectURL(data);
            const link = document.createElement('a');
            link.href = url;
            link.download = 'order-' + orderId + '.pdf';
            link.click();
          });
      }
    </script>
    </body>

    </html>